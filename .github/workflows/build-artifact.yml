---
name: Build Artifact

on:
  workflow_call:

jobs:
  build-artifact:
    name: Build Artifact
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Register problem matchers
      run: echo "::add-matcher::.github/matchers.json"

    - name: Setup Node.js environment
      uses: actions/setup-node@v5
      with:
        check-latest: true
        node-version: latest

    - name: Setup Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Setup Poetry
      uses: abatilo/actions-poetry@v4

    - name: Cache the virtualenv
      uses: actions/cache@v4
      with:
        path: ~/.cache/pypoetry
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install Poetry dependencies
      run: poetry install

    - name: Build Sphinx docs
      run: poetry run sphinx-build -M dirhtml . _build
      env:
        GIT_REF: ${{ github.head_ref || 'main' }}

    - name: Run Linkcheck
      run: poetry run sphinx-build -M linkcheck . _build
      env:
        GIT_REF: ${{ github.head_ref || 'main' }}

    - name: Run Vale
      uses: docker://jdkato/vale
      with:
        entrypoint: /bin/sh
        args: -euxc "vale sync && vale --output line ."

    - name: Minify built docs
      run: |
        set -eux
        npm install -g npm@latest
        npx html-minifier --input-dir _build/dirhtml/ --output-dir _build/dirhtml/ --file-ext html --collapse-whitespace --collapse-inline-tag-whitespace --minify-css --minify-js --minify-urls ROOT_PATH_RELATIVE --remove-comments --remove-empty-attributes --conservative-collapse
        find _build/dirhtml/ -type f -size +0 | while read file; do
            filename=$(basename -- "$file");
            extension="${filename##*.}";
            if [ "$extension" = "js" ]; then
                npx terser "$file" --compress --output "$file";
            fi;
            if [ "$extension" = "css" ]; then
                npx clean-css-cli "$file" -O2 --output "$file";
            fi;
            if [ "$extension" = "map" ]; then
                rm -f "$file";
            fi;
        done;

    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v4
      with:
        path: _build/dirhtml/
